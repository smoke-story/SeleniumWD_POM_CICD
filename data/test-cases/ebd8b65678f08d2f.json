{"uid":"ebd8b65678f08d2f","name":"guest can add product to basket","fullName":"tests.test_product_page.TestProductPageGuest#test_guest_can_add_product_to_basket","historyId":"c50a135ba810fd230d6329dce414c328","time":{"start":1761612371036,"stop":1761612372693,"duration":1657},"status":"skipped","statusMessage":"XFAIL\n\nAssertionError: 'success added message: Coders at Work book' is not correct","statusTrace":"self = <test_product_page.TestProductPageGuest object at 0x7f3279e919d0>\nnum = 7\n\n    @allure.severity(\"blocker\")\n    @allure.title(\"guest can add product to basket\")\n    @pytest.mark.flaky(reruns=1, reruns_delay=1)\n    @pytest.mark.parametrize(\"num\",\n            [_ if _ != 7 else pytest.param(7, marks=pytest.mark.xfail) for _ in range(0, 10)])\n    def test_guest_can_add_product_to_basket(self, num) -> None:\n        self.product_page.open(f\"?promo=offer{num}\")\n        self.base_page.delete_all_cookies()\n        self.product_page.should_be_link_parameter_in_url()\n        self.product_page.add_product_to_basket()\n        self.base_page.solve_quiz_and_get_code()\n>       self.product_page.should_be_product_title_in_message()\n\ntest_product_page.py:86: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.product_page.ProductPage object at 0x7f3279a89240>\n\n    def should_be_product_title_in_message(self) -> None:\n        with allure.step(\"should be product title in message\"):\n            product_title = self.driver.find_element(*ProductPageLocators.PRODUCT_TITLE).text\n            success_added_message = self.wait.until(\n                EC.presence_of_element_located(ProductPageLocators.MESSAGE_SUCCESSFUL_ADDING)).text\n>           assert product_title == success_added_message, \\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n                f\"'success added message: {success_added_message}' is not correct\"\nE           AssertionError: 'success added message: Coders at Work book' is not correct\n\n../pages/product_page.py:24: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1761612370689,"stop":1761612371036,"duration":347},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1761612371036,"stop":1761612371036,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL\n\nAssertionError: 'success added message: Coders at Work book' is not correct","statusTrace":"self = <test_product_page.TestProductPageGuest object at 0x7f3279e919d0>\nnum = 7\n\n    @allure.severity(\"blocker\")\n    @allure.title(\"guest can add product to basket\")\n    @pytest.mark.flaky(reruns=1, reruns_delay=1)\n    @pytest.mark.parametrize(\"num\",\n            [_ if _ != 7 else pytest.param(7, marks=pytest.mark.xfail) for _ in range(0, 10)])\n    def test_guest_can_add_product_to_basket(self, num) -> None:\n        self.product_page.open(f\"?promo=offer{num}\")\n        self.base_page.delete_all_cookies()\n        self.product_page.should_be_link_parameter_in_url()\n        self.product_page.add_product_to_basket()\n        self.base_page.solve_quiz_and_get_code()\n>       self.product_page.should_be_product_title_in_message()\n\ntest_product_page.py:86: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.product_page.ProductPage object at 0x7f3279a89240>\n\n    def should_be_product_title_in_message(self) -> None:\n        with allure.step(\"should be product title in message\"):\n            product_title = self.driver.find_element(*ProductPageLocators.PRODUCT_TITLE).text\n            success_added_message = self.wait.until(\n                EC.presence_of_element_located(ProductPageLocators.MESSAGE_SUCCESSFUL_ADDING)).text\n>           assert product_title == success_added_message, \\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n                f\"'success added message: {success_added_message}' is not correct\"\nE           AssertionError: 'success added message: Coders at Work book' is not correct\n\n../pages/product_page.py:24: AssertionError","steps":[{"name":"open 'https://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer7' page","time":{"start":1761612371036,"stop":1761612371592,"duration":556},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"should be link parameter in url","time":{"start":1761612371981,"stop":1761612371984,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"add product to basket","time":{"start":1761612371984,"stop":1761612372059,"duration":75},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"should be product title in message","time":{"start":1761612372063,"stop":1761612372693,"duration":630},"status":"failed","statusMessage":"AssertionError: 'success added message: Coders at Work book' is not correct\n","statusTrace":"  File \"/usr/workspace/pages/product_page.py\", line 24, in should_be_product_title_in_message\n    assert product_title == success_added_message, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1761612372699,"stop":1761612372758,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Product page functionality"},{"name":"severity","value":"blocker"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_product_page"},{"name":"subSuite","value":"TestProductPageGuest"},{"name":"host","value":"173355e19d31"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_product_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"num","value":"7"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":3,"passed":0,"unknown":0,"total":3},"items":[{"uid":"1022b481cf954f1","status":"skipped","statusDetails":"Skipped: unconditional skip","time":{"start":1761438336830,"stop":1761438336830,"duration":0}},{"uid":"dd10267bf51fc0f4","status":"skipped","statusDetails":"Skipped: unconditional skip","time":{"start":1761435553393,"stop":1761435553393,"duration":0}}]},"tags":[]},"source":"ebd8b65678f08d2f.json","parameterValues":["7"]}